@using KaffkaAspCoreWebExample.Models
@model KafkaMessageViewModel
@{
    ViewData["Title"] = "發送 Kafka 訊息";
}

<h1>發送 Kafka 訊息</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>發送訊息表單</h5>
            </div>
            <div class="card-body">
                <form asp-action="Produce" method="post">
                    <div class="form-group mb-3">
                        <label asp-for="Topic" class="control-label"></label>
                        <input asp-for="Topic" class="form-control" value="test-topic" />
                        <span asp-validation-for="Topic" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Key" class="control-label"></label>
                        <input asp-for="Key" class="form-control" />
                        <small class="form-text text-muted">如果不提供鍵值，將自動生成一個唯一識別碼</small>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Message" class="control-label"></label>
                        <textarea asp-for="Message" class="form-control" rows="5"></textarea>
                        <span asp-validation-for="Message" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">發送訊息</button>
                        <a asp-action="Index" class="btn btn-secondary">返回</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>使用說明</h5>
            </div>
            <div class="card-body">
                <p>填寫上面的表單以發送訊息到 Kafka：</p>
                <ul>
                    <li><strong>主題</strong>：填寫您想要發送訊息的 Kafka 主題名稱</li>
                    <li><strong>鍵值</strong>：（可選）用於指定訊息的鍵，影響分區分配</li>
                    <li><strong>訊息內容</strong>：要發送的實際訊息</li>
                </ul>
                <p>發送訊息後，您可以在「接收訊息」頁面查看已接收的訊息。</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}